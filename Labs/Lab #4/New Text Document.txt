Where to being...

I think I have a decent grasp on how GUIs function and how to pass data between panels. But as far as effective design,
I could probably use some work.

Starting with the first part, I didn't have trouble displaying the text in the CreatedPanel part. The trouble came from formatting it
so that it wraps and starts on a newline. I ended up just wrapping each Ship class toString method in html. For example:

public String toString()
{
	String str = "<html>Ship's name: " + name + "<br> Year built: " + year + "</html>";
	return str;
}

It was the only solution I could find as far as formatting within a panel.

And then I just created a new method in CreatedPanel to call from the DoneListener...

public void displayShip(Ship ship) 
{	
	//Remove all information in panel
	//and then replace with updated information.
	this.removeAll();
	message = new JLabel(ship.toString());
	this.add(message);
	this.setVisible(false);
	this.setVisible(true);	
}


As for the 2nd part, I only added 2 toppings to make sure everything worked as I was having some trouble in the beginning. 
It is also designed a little different than what was displayed but it functions.

Regarding the structure of my code, the toppings have a class to construct the labels "name, none, full, 1st half etc.."
and another class for te panel to house them in and a final class to create individual topping objects.

I had some issue displaying the quantity and price, and updating. But managed to fix with:

currentPriceLabel = new JLabel("Current Price");
	currentPrice = new JLabel(String.valueOf(currentPriceTotal));

to display the double in string format for a JLabel and updating with...

public void displayUpdate() 
{
	//Clear panel
	buttonPanel.removeAll();
		
	//Format the quantity to avoid long decimals.
	DecimalFormat dc = new DecimalFormat("0.00");
	String temp = dc.format(currentPriceTotal);
		
	//Create labels for values
	quantity = new JLabel(String.valueOf(quantityCount));
	currentPrice = new JLabel("$"+String.valueOf(temp));
		
	//Add all components back to panel.
	buttonPanel.add(quantityLabel);
	buttonPanel.add(quantity);
	buttonPanel.add(currentPriceLabel);
	buttonPanel.add(currentPrice);
	buttonPanel.add(addToOrder);
	buttonPanel.add(cancel);
		
	//Reset panel visibility
	buttonPanel.setVisible(false);
	buttonPanel.setVisible(true);
}

I look forward to the feedback!





